{"ast":null,"code":"var _jsxFileName = \"/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/chatbot/config.js\";\nimport React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst botName = \"DocsBot\";\nconst config = {\n  botName: botName,\n  lang: \"ru\",\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: \"#376B7E\"\n    },\n    chatButton: {\n      backgroundColor: \"#5ccc9d\"\n    }\n  },\n  initialMessages: [createChatBotMessage(`Hi I'm ${botName}. I’m here to help you explain how I work.`), createChatBotMessage(\"Here's a quick overview over what I need to function. ask me about the different parts to dive deeper.\", {\n    withAvatar: false,\n    delay: 500,\n    widget: \"overview\"\n  })],\n  state: {\n    gist: \"\"\n  },\n  customComponents: {},\n  widgets: [{\n    widgetName: \"overview\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(Overview, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"gist\"]\n  }, {\n    widgetName: \"messageParser\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(MessageParser, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"gist\"]\n  }, {\n    widgetName: \"actionProviderDocs\",\n    widgetFunc: props => /*#__PURE__*/_jsxDEV(ActionProviderDocs, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 30\n    }, this),\n    mapStateToProps: [\"gist\"]\n  }]\n};\nexport default config;","map":{"version":3,"sources":["/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/chatbot/config.js"],"names":["React","createChatBotMessage","MessageParser","ActionProvider","botName","config","lang","customStyles","botMessageBox","backgroundColor","chatButton","initialMessages","withAvatar","delay","widget","state","gist","customComponents","widgets","widgetName","widgetFunc","props","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,mBAArC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,OAAO,GAAG,SAAhB;AAEA,MAAMC,MAAM,GAAG;AACbD,EAAAA,OAAO,EAAEA,OADI;AAEbE,EAAAA,IAAI,EAAE,IAFO;AAGbC,EAAAA,YAAY,EAAE;AACZC,IAAAA,aAAa,EAAE;AACbC,MAAAA,eAAe,EAAE;AADJ,KADH;AAIZC,IAAAA,UAAU,EAAE;AACVD,MAAAA,eAAe,EAAE;AADP;AAJA,GAHD;AAWbE,EAAAA,eAAe,EAAE,CACfV,oBAAoB,CACjB,UAASG,OAAQ,4CADA,CADL,EAIfH,oBAAoB,CAClB,wGADkB,EAElB;AACEW,IAAAA,UAAU,EAAE,KADd;AAEEC,IAAAA,KAAK,EAAE,GAFT;AAGEC,IAAAA,MAAM,EAAE;AAHV,GAFkB,CAJL,CAXJ;AAwBbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD,GAxBM;AA2BbC,EAAAA,gBAAgB,EAAE,EA3BL;AA4BbC,EAAAA,OAAO,EAAE,CACP;AACEC,IAAAA,UAAU,EAAE,UADd;AAEEC,IAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,QAAD,OAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,YAFzB;AAGEC,IAAAA,eAAe,EAAE,CAAC,MAAD;AAHnB,GADO,EAMP;AACEH,IAAAA,UAAU,EAAE,eADd;AAEEC,IAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,aAAD,OAAmBA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFzB;AAGEC,IAAAA,eAAe,EAAE,CAAC,MAAD;AAHnB,GANO,EAWP;AACEH,IAAAA,UAAU,EAAE,oBADd;AAEEC,IAAAA,UAAU,EAAGC,KAAD,iBAAW,QAAC,kBAAD,OAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFzB;AAGEC,IAAAA,eAAe,EAAE,CAAC,MAAD;AAHnB,GAXO;AA5BI,CAAf;AA+CA,eAAejB,MAAf","sourcesContent":["import React from \"react\";\nimport { createChatBotMessage } from \"react-chatbot-kit\";\nimport MessageParser from \"./MessageParser\";\nimport ActionProvider from \"./ActionProvider\";\n\n\nconst botName = \"DocsBot\";\n\nconst config = {\n  botName: botName,\n  lang: \"ru\",\n  customStyles: {\n    botMessageBox: {\n      backgroundColor: \"#376B7E\",\n    },\n    chatButton: {\n      backgroundColor: \"#5ccc9d\",\n    },\n  },\n  initialMessages: [\n    createChatBotMessage(\n      `Hi I'm ${botName}. I’m here to help you explain how I work.`\n    ),\n    createChatBotMessage(\n      \"Here's a quick overview over what I need to function. ask me about the different parts to dive deeper.\",\n      {\n        withAvatar: false,\n        delay: 500,\n        widget: \"overview\",\n      }\n    ),\n  ],\n  state: {\n    gist: \"\",\n  },\n  customComponents: {},\n  widgets: [\n    {\n      widgetName: \"overview\",\n      widgetFunc: (props) => <Overview {...props} />,\n      mapStateToProps: [\"gist\"],\n    },\n    {\n      widgetName: \"messageParser\",\n      widgetFunc: (props) => <MessageParser {...props} />,\n      mapStateToProps: [\"gist\"],\n    },\n    {\n      widgetName: \"actionProviderDocs\",\n      widgetFunc: (props) => <ActionProviderDocs {...props} />,\n      mapStateToProps: [\"gist\"],\n    },\n  ],\n};\n\nexport default config;"]},"metadata":{},"sourceType":"module"}