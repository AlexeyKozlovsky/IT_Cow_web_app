{"ast":null,"code":"var _jsxFileName = \"/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MyCard from '../Mycard';\nimport surg from '../../resources/surgeon.jpg';\nimport '../Mycard.css';\nimport card from '../Mycard.js';\nimport '../../utils/App.css';\nimport firebase from './../../firebase';\nimport { StylesProvider } from '@material-ui/core';\nimport ScrollArea from 'react-scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DoctorsPage extends React.Component {\n  constructor() {\n    super();\n    let cardInfo;\n    this.state = {\n      cardInfo: []\n    };\n  }\n\n  componentDidUpdate() {\n    const dbRef = firebase.database().ref(); // dbRef.child(\"cards\").child(0).get().then((card) => {\n    //     console.log(card.val())\n    // })\n\n    dbRef.child(\"doctor_types\").get().then(doctors => {\n      console.log(doctors.val());\n      dbRef.child(\"cards\").child(0).get().then(card => {\n        console.log(doctors[parseInt(card.val()[\"doctor_type_id\"])]);\n      });\n    }); // dbRef.child(\"cards\").get().then((cards) => {\n    //     if (cards.exists()) {\n    //         this.state.cardInfo = cards.val()\n    //         console.log(cards.val());\n    //     } else {\n    //         console.log(\"No data available\");\n    //     }\n    // }).catch((error) => {\n    //     console.error(error);\n    // });\n\n    this.render();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>{this.cardInfo}</div>\n      _jsxDEV(\"div\", {\n        className: \"grid page\",\n        children: this.state.cardInfo.map(card, index => /*#__PURE__*/_jsxDEV(MyCard, {\n          doctorTypeId: card.doctor_type_id,\n          desc: card.desc,\n          imageId: card.image_id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js"],"names":["React","Container","Row","Col","MyCard","surg","card","firebase","StylesProvider","ScrollArea","DoctorsPage","Component","constructor","cardInfo","state","componentDidUpdate","dbRef","database","ref","child","get","then","doctors","console","log","val","parseInt","render","map","index","doctor_type_id","desc","image_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,qBAAP;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAOC,UAAP,MAAuB,iBAAvB;;AAGA,eAAe,MAAMC,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AAErDC,EAAAA,WAAW,GAAG;AACV;AACA,QAAIC,QAAJ;AACA,SAAKC,KAAL,GAAa;AAACD,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAEDE,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,KAAK,GAAGT,QAAQ,CAACU,QAAT,GAAoBC,GAApB,EAAd,CADiB,CAIjB;AACA;AACA;;AAEAF,IAAAA,KAAK,CAACG,KAAN,CAAY,cAAZ,EAA4BC,GAA5B,GAAkCC,IAAlC,CAAwCC,OAAD,IAAa;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,GAAR,EAAZ;AACAT,MAAAA,KAAK,CAACG,KAAN,CAAY,OAAZ,EAAqBA,KAArB,CAA2B,CAA3B,EAA8BC,GAA9B,GAAoCC,IAApC,CAA0Cf,IAAD,IAAU;AAC/CiB,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACI,QAAQ,CAACpB,IAAI,CAACmB,GAAL,GAAW,gBAAX,CAAD,CAAT,CAAnB;AACH,OAFD;AAGH,KALD,EARiB,CAcjB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKE,MAAL;AACH;;AAEDA,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACE,KAAKb,KAAL,CAAWD,QAAX,CAAoBe,GAApB,CAAwBtB,IAAxB,EAA8BuB,KAAK,iBACrC,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAEvB,IAAI,CAACwB,cAA3B;AAA2C,UAAA,IAAI,EAAExB,IAAI,CAACyB,IAAtD;AAA4D,UAAA,OAAO,EAAEzB,IAAI,CAAC0B;AAA1E,WAAyFH,KAAzF;AAAA;AAAA;AAAA;AAAA,gBADE;AADF;AAAA;AAAA;AAAA;AAAA;AAHR;AAWH;;AAjDoD","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MyCard from '../Mycard'\nimport surg from '../../resources/surgeon.jpg'\nimport '../Mycard.css'\nimport card from '../Mycard.js'\nimport '../../utils/App.css'\n\nimport firebase from './../../firebase'\nimport { StylesProvider } from '@material-ui/core'\n\nimport ScrollArea from 'react-scrollbar'\n\n\nexport default class DoctorsPage extends React.Component {\n\n    constructor() {\n        super()\n        let cardInfo;\n        this.state = {cardInfo: []}\n    }\n\n    componentDidUpdate() {\n        const dbRef = firebase.database().ref();\n\n\n        // dbRef.child(\"cards\").child(0).get().then((card) => {\n        //     console.log(card.val())\n        // })\n\n        dbRef.child(\"doctor_types\").get().then((doctors) => {\n            console.log(doctors.val())\n            dbRef.child(\"cards\").child(0).get().then((card) => {\n                console.log(doctors[parseInt(card.val()[\"doctor_type_id\"])])\n            })\n        })\n        // dbRef.child(\"cards\").get().then((cards) => {\n        //     if (cards.exists()) {\n        //         this.state.cardInfo = cards.val()\n                \n        //         console.log(cards.val());\n        //     } else {\n        //         console.log(\"No data available\");\n        //     }\n        // }).catch((error) => {\n        //     console.error(error);\n        // });\n\n        this.render()\n    }\n\n    render() {\n        return (\n            // <div>{this.cardInfo}</div>\n\n                <div className=\"grid page\">\n                { this.state.cardInfo.map(card, index =>\n                <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index}/>\n                    )}\n            \n                </div>\n            \n        ) \n    }\n}"]},"metadata":{},"sourceType":"module"}