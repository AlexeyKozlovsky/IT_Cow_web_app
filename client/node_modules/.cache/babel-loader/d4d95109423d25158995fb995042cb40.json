{"ast":null,"code":"import axios from 'axios';\nimport { GET_SYMPT_URL_PREFIX } from './config';\n\nclass MessageParser {\n  constructor(actionProvider, state) {\n    this.parse = message => {\n      const lowerCase = message.toLowerCase();\n      console.log(GET_SYMPT_URL_PREFIX + message);\n      axios.get(GET_SYMPT_URL_PREFIX + message, {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      }).then(res => {\n        console.log(res);\n      });\n\n      if (lowerCase.includes(\"messageparser\") || lowerCase.includes(\"parse\") || lowerCase.includes(\"parser\") || lowerCase.includes(\"message parser\")) {\n        return this.actionProvider.handleMessageParser();\n      }\n\n      return this.actionProvider.reply(); //return this.actionProvider.handleDefault();\n    };\n\n    this.actionProvider = actionProvider; // State represents the chatbot state and is passed \n    // in at initalization. You can use it to read chatbot state\n    // inside the messageParser\n\n    this.state = state;\n  }\n\n}\n\nexport default MessageParser;","map":{"version":3,"sources":["/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/chatbot/MessageParser.js"],"names":["axios","GET_SYMPT_URL_PREFIX","MessageParser","constructor","actionProvider","state","parse","message","lowerCase","toLowerCase","console","log","get","headers","then","res","includes","handleMessageParser","reply"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,UAArC;;AAEA,MAAMC,aAAN,CAAoB;AAChBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,KAAjB,EAAwB;AAAA,SAQnCC,KARmC,GAQ1BC,OAAD,IAAa;AACnB,YAAMC,SAAS,GAAGD,OAAO,CAACE,WAAR,EAAlB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,oBAAoB,GAACM,OAAjC;AACEP,MAAAA,KAAK,CAACY,GAAN,CAAUX,oBAAoB,GAACM,OAA/B,EAAwC;AAACM,QAAAA,OAAO,EAAE;AAAC,yCAA+B;AAAhC;AAAV,OAAxC,EAAyFC,IAAzF,CAA8FC,GAAG,IAAI;AACjGL,QAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,OAFD;;AAKF,UACEP,SAAS,CAACQ,QAAV,CAAmB,eAAnB,KACAR,SAAS,CAACQ,QAAV,CAAmB,OAAnB,CADA,IAEAR,SAAS,CAACQ,QAAV,CAAmB,QAAnB,CAFA,IAGAR,SAAS,CAACQ,QAAV,CAAmB,gBAAnB,CAJF,EAKE;AACA,eAAO,KAAKZ,cAAL,CAAoBa,mBAApB,EAAP;AACD;;AAED,aAAO,KAAKb,cAAL,CAAoBc,KAApB,EAAP,CAlBmB,CAmBnB;AACD,KA5BkC;;AACjC,SAAKd,cAAL,GAAsBA,cAAtB,CADiC,CAEjC;AACA;AACA;;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAPe;;AAgClB,eAAeH,aAAf","sourcesContent":["import axios from 'axios';\nimport { GET_SYMPT_URL_PREFIX } from './config';\n\nclass MessageParser {\n    constructor(actionProvider, state) {\n      this.actionProvider = actionProvider;\n      // State represents the chatbot state and is passed \n      // in at initalization. You can use it to read chatbot state\n      // inside the messageParser\n      this.state = state\n    }\n  \n    parse = (message) => {\n      const lowerCase = message.toLowerCase();\n\n      console.log(GET_SYMPT_URL_PREFIX+message)\n        axios.get(GET_SYMPT_URL_PREFIX+message, {headers: {'Access-Control-Allow-Origin': '*'}}).then(res => {\n            console.log(res)\n        })\n      \n  \n      if (\n        lowerCase.includes(\"messageparser\") ||\n        lowerCase.includes(\"parse\") ||\n        lowerCase.includes(\"parser\") ||\n        lowerCase.includes(\"message parser\")\n      ) {\n        return this.actionProvider.handleMessageParser();\n      }\n\n      return this.actionProvider.reply();\n      //return this.actionProvider.handleDefault();\n    };\n  }\n  \n  export default MessageParser;"]},"metadata":{},"sourceType":"module"}