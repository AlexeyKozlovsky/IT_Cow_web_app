{"ast":null,"code":"import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MyCard from '../Mycard';\nimport surg from '../../resources/surgeon.jpg';\nimport '../Mycard.css';\nimport card from '../Mycard.js';\nimport firebase from './../../firebase';\nimport { StylesProvider } from '@material-ui/core'; // export default function DoctorsPage() {\n//     const dbRef = firebase.database().ref();\n//     let cardInfo = [];\n//     dbRef.child(\"cards\").get().then((cards) => {\n//         if (cards.exists()) {\n//             setTimeout(() => {cardInfo = cards.val();}, 60000)\n//             console.log(cards.val());\n//         } else {\n//             console.log(\"No data available\");\n//         }\n//     }).catch((error) => {\n//         console.error(error);\n//     });\n//     const renderCard = (card, index) => {\n//         return (\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//         )\n//     }\n//     console.log(cardInfo);\n//     return (\n//         // <Container style={{ paddingTop: '2rem', paddingBottom: '2rem'}}>\n//         //     <Row>\n//         //         <Col>\n//         //             <MyCard title={cardInfo[0].title} />\n//         //         </Col>\n//         //     </Row>\n//         // </Container>\n//         <div>\n//             <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n//                 { cardInfo.map(card, index =>\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//                 )}\n//             </div>\n//         </div>\n//     )\n// }\n\nexport default class DoctorsPage extends React.Component {\n  componentDidUpdate() {\n    const dbRef = firebase.database().ref();\n    let cardInfo = [];\n    dbRef.child(\"cards\").get().then(cards => {\n      if (cards.exists()) {\n        setTimeout(() => {\n          cardInfo = cards.val();\n        }, 60000);\n        console.log(cards.val());\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {// <div>\n    //     <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n    //         { this.cardInfo.map(card, index =>\n    //     <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n    //         )}\n    //     </div>\n    // </div>\n  }\n\n}","map":{"version":3,"sources":["/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js"],"names":["React","Container","Row","Col","MyCard","surg","card","firebase","StylesProvider","DoctorsPage","Component","componentDidUpdate","dbRef","database","ref","cardInfo","child","get","then","cards","exists","setTimeout","val","console","log","catch","error","render"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,eAAe,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AAErDC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,KAAK,GAAGL,QAAQ,CAACM,QAAT,GAAoBC,GAApB,EAAd;AACA,QAAIC,QAAQ,GAAG,EAAf;AAEAH,IAAAA,KAAK,CAACI,KAAN,CAAY,OAAZ,EAAqBC,GAArB,GAA2BC,IAA3B,CAAiCC,KAAD,IAAW;AACvC,UAAIA,KAAK,CAACC,MAAN,EAAJ,EAAoB;AAChBC,QAAAA,UAAU,CAAC,MAAM;AAACN,UAAAA,QAAQ,GAAGI,KAAK,CAACG,GAAN,EAAX;AAAwB,SAAhC,EAAkC,KAAlC,CAAV;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,GAAN,EAAZ;AACH,OAJD,MAIO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,KARD,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,KAVD;AAWH;;AAEDC,EAAAA,MAAM,GAAG,CACL;AACA;AACA;AACA;AACA;AAEA;AACA;AACH;;AA5BoD","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MyCard from '../Mycard'\nimport surg from '../../resources/surgeon.jpg'\nimport '../Mycard.css'\nimport card from '../Mycard.js'\n\nimport firebase from './../../firebase'\nimport { StylesProvider } from '@material-ui/core'\n\n// export default function DoctorsPage() {\n\n//     const dbRef = firebase.database().ref();\n//     let cardInfo = [];\n\n//     dbRef.child(\"cards\").get().then((cards) => {\n//         if (cards.exists()) {\n//             setTimeout(() => {cardInfo = cards.val();}, 60000)\n            \n//             console.log(cards.val());\n//         } else {\n//             console.log(\"No data available\");\n//         }\n//     }).catch((error) => {\n//         console.error(error);\n//     });\n    \n//     const renderCard = (card, index) => {\n//         return (\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//         )\n//     }\n\n//     console.log(cardInfo);\n//     return (\n//         // <Container style={{ paddingTop: '2rem', paddingBottom: '2rem'}}>\n//         //     <Row>\n//         //         <Col>\n//         //             <MyCard title={cardInfo[0].title} />\n//         //         </Col>\n//         //     </Row>\n//         // </Container>\n//         <div>\n//             <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n//                 { cardInfo.map(card, index =>\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//                 )}\n        \n//             </div>\n//         </div>\n//     )\n// }\n\nexport default class DoctorsPage extends React.Component {\n\n    componentDidUpdate() {\n        const dbRef = firebase.database().ref();\n        let cardInfo = [];\n\n        dbRef.child(\"cards\").get().then((cards) => {\n            if (cards.exists()) {\n                setTimeout(() => {cardInfo = cards.val();}, 60000)\n                \n                console.log(cards.val());\n            } else {\n                console.log(\"No data available\");\n            }\n        }).catch((error) => {\n            console.error(error);\n        });\n    }\n\n    render() {\n        // <div>\n        //     <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n        //         { this.cardInfo.map(card, index =>\n        //     <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n        //         )}\n        \n        //     </div>\n        // </div>\n    }\n}"]},"metadata":{},"sourceType":"module"}