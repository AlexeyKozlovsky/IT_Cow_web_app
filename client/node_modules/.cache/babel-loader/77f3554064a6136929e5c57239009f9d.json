{"ast":null,"code":"import axios from 'axios';\nimport { GET_SYMPT_URL_PREFIX } from './config';\n\nclass MessageParser {\n  constructor(actionProvider, state) {\n    this.parse = message => {\n      const lowerCase = message.toLowerCase();\n      var res;\n      console.log(GET_SYMPT_URL_PREFIX + message);\n      axios.get(\"https://lod.medlinx.online/terminology/api/v1/fhir/ValueSet/$expand?url=http://terminology.medlinx.online/ValueSet/helzy-search-vs&displayLanguage=ru&offset=0&count=10&filter=%D0%91%D0%BE%D0%BB%D0%B8%D1%82%20%D0%B6%D0%B8%D0%B2%D0%BE%D1%82\").then(res => {\n        console.log(res);\n      }).catch(error => {\n        console.log(error);\n      });\n      console.log(res);\n\n      if (lowerCase.includes(\"messageparser\") || lowerCase.includes(\"parse\") || lowerCase.includes(\"parser\") || lowerCase.includes(\"message parser\")) {\n        return this.actionProvider.handleMessageParser();\n      }\n\n      return this.actionProvider.handleDefault();\n    };\n\n    this.actionProvider = actionProvider; // State represents the chatbot state and is passed \n    // in at initalization. You can use it to read chatbot state\n    // inside the messageParser\n\n    this.state = state;\n  }\n\n}\n\nexport default MessageParser;","map":{"version":3,"sources":["/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/chatbot/MessageParser.js"],"names":["axios","GET_SYMPT_URL_PREFIX","MessageParser","constructor","actionProvider","state","parse","message","lowerCase","toLowerCase","res","console","log","get","then","catch","error","includes","handleMessageParser","handleDefault"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,UAArC;;AAEA,MAAMC,aAAN,CAAoB;AAChBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,KAAjB,EAAwB;AAAA,SAQnCC,KARmC,GAQ1BC,OAAD,IAAa;AACnB,YAAMC,SAAS,GAAGD,OAAO,CAACE,WAAR,EAAlB;AAEA,UAAIC,GAAJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,oBAAoB,GAACM,OAAjC;AACAP,MAAAA,KAAK,CAACa,GAAN,CAAU,gPAAV,EAA4PC,IAA5P,CAAiQJ,GAAG,IAAI;AACpQC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAFD,EAEGK,KAFH,CAESC,KAAK,IAAI;AAChBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,OAJD;AAMAL,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAEA,UACEF,SAAS,CAACS,QAAV,CAAmB,eAAnB,KACAT,SAAS,CAACS,QAAV,CAAmB,OAAnB,CADA,IAEAT,SAAS,CAACS,QAAV,CAAmB,QAAnB,CAFA,IAGAT,SAAS,CAACS,QAAV,CAAmB,gBAAnB,CAJF,EAKE;AACA,eAAO,KAAKb,cAAL,CAAoBc,mBAApB,EAAP;AACD;;AACD,aAAO,KAAKd,cAAL,CAAoBe,aAApB,EAAP;AACD,KA9BkC;;AACjC,SAAKf,cAAL,GAAsBA,cAAtB,CADiC,CAEjC;AACA;AACA;;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;AAPe;;AAkClB,eAAeH,aAAf","sourcesContent":["import axios from 'axios';\nimport { GET_SYMPT_URL_PREFIX } from './config';\n\nclass MessageParser {\n    constructor(actionProvider, state) {\n      this.actionProvider = actionProvider;\n      // State represents the chatbot state and is passed \n      // in at initalization. You can use it to read chatbot state\n      // inside the messageParser\n      this.state = state\n    }\n  \n    parse = (message) => {\n      const lowerCase = message.toLowerCase();\n\n      var res;\n      console.log(GET_SYMPT_URL_PREFIX+message)\n      axios.get(\"https://lod.medlinx.online/terminology/api/v1/fhir/ValueSet/$expand?url=http://terminology.medlinx.online/ValueSet/helzy-search-vs&displayLanguage=ru&offset=0&count=10&filter=%D0%91%D0%BE%D0%BB%D0%B8%D1%82%20%D0%B6%D0%B8%D0%B2%D0%BE%D1%82\").then(res => {\n          console.log(res);\n      }).catch(error => {\n        console.log(error)\n      })\n    \n      console.log(res)\n  \n      if (\n        lowerCase.includes(\"messageparser\") ||\n        lowerCase.includes(\"parse\") ||\n        lowerCase.includes(\"parser\") ||\n        lowerCase.includes(\"message parser\")\n      ) {\n        return this.actionProvider.handleMessageParser();\n      }\n      return this.actionProvider.handleDefault();\n    };\n  }\n  \n  export default MessageParser;"]},"metadata":{},"sourceType":"module"}