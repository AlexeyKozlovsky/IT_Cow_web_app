{"ast":null,"code":"var _jsxFileName = \"/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MyCard from '../Mycard';\nimport surg from '../../resources/surgeon.jpg';\nimport '../Mycard.css';\nimport card from '../Mycard.js';\nimport '../../utils/App.css';\nimport firebase from './../../firebase';\nimport { StylesProvider } from '@material-ui/core';\nimport ScrollArea from 'react-scrollbar'; // export default function DoctorsPage() {\n//     const dbRef = firebase.database().ref();\n//     let cardInfo = [];\n//     dbRef.child(\"cards\").get().then((cards) => {\n//         if (cards.exists()) {\n//             setTimeout(() => {cardInfo = cards.val();}, 60000)\n//             console.log(cards.val());\n//         } else {\n//             console.log(\"No data available\");\n//         }\n//     }).catch((error) => {\n//         console.error(error);\n//     });\n//     const renderCard = (card, index) => {\n//         return (\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//         )\n//     }\n//     console.log(cardInfo);\n//     return (\n//         // <Container style={{ paddingTop: '2rem', paddingBottom: '2rem'}}>\n//         //     <Row>\n//         //         <Col>\n//         //             <MyCard title={cardInfo[0].title} />\n//         //         </Col>\n//         //     </Row>\n//         // </Container>\n//         <div>\n//             <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n//                 { cardInfo.map(card, index =>\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//                 )}\n//             </div>\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DoctorsPage extends React.Component {\n  constructor() {\n    super();\n    let cardInfo;\n    this.state = {\n      cardInfo: []\n    };\n  }\n\n  componentDidUpdate() {\n    const dbRef = firebase.database().ref();\n    dbRef.child(\"cards\").get().then(cards => {\n      if (cards.exists()) {\n        this.state.cardInfo = cards.val();\n        console.log(cards.val());\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.render();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>{this.cardInfo}</div>\n      _jsxDEV(\"div\", {\n        className: \"grid\",\n        children: this.state.cardInfo.map(card, index => /*#__PURE__*/_jsxDEV(MyCard, {\n          doctorTypeId: card.doctor_type_id,\n          desc: card.desc,\n          imageId: card.image_id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js"],"names":["React","Container","Row","Col","MyCard","surg","card","firebase","StylesProvider","ScrollArea","DoctorsPage","Component","constructor","cardInfo","state","componentDidUpdate","dbRef","database","ref","child","get","then","cards","exists","val","console","log","catch","error","render","map","index","doctor_type_id","desc","image_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAO,qBAAP;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAOC,UAAP,MAAuB,iBAAvB,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAe,MAAMC,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AAErDC,EAAAA,WAAW,GAAG;AACV;AACA,QAAIC,QAAJ;AACA,SAAKC,KAAL,GAAa;AAACD,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAEDE,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,KAAK,GAAGT,QAAQ,CAACU,QAAT,GAAoBC,GAApB,EAAd;AAEAF,IAAAA,KAAK,CAACG,KAAN,CAAY,OAAZ,EAAqBC,GAArB,GAA2BC,IAA3B,CAAiCC,KAAD,IAAW;AACvC,UAAIA,KAAK,CAACC,MAAN,EAAJ,EAAoB;AAChB,aAAKT,KAAL,CAAWD,QAAX,GAAsBS,KAAK,CAACE,GAAN,EAAtB;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,GAAN,EAAZ;AACH,OAJD,MAIO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,KARD,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,KAVD;AAYA,SAAKC,MAAL;AACH;;AAEDA,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBACE,KAAKf,KAAL,CAAWD,QAAX,CAAoBiB,GAApB,CAAwBxB,IAAxB,EAA8ByB,KAAK,iBACrC,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAEzB,IAAI,CAAC0B,cAA3B;AAA2C,UAAA,IAAI,EAAE1B,IAAI,CAAC2B,IAAtD;AAA4D,UAAA,OAAO,EAAE3B,IAAI,CAAC4B;AAA1E,WAAyFH,KAAzF;AAAA;AAAA;AAAA;AAAA,gBADE;AADF;AAAA;AAAA;AAAA;AAAA;AAHR;AAWH;;AAtCoD","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MyCard from '../Mycard'\nimport surg from '../../resources/surgeon.jpg'\nimport '../Mycard.css'\nimport card from '../Mycard.js'\nimport '../../utils/App.css'\n\nimport firebase from './../../firebase'\nimport { StylesProvider } from '@material-ui/core'\n\nimport ScrollArea from 'react-scrollbar'\n\n// export default function DoctorsPage() {\n\n//     const dbRef = firebase.database().ref();\n//     let cardInfo = [];\n\n//     dbRef.child(\"cards\").get().then((cards) => {\n//         if (cards.exists()) {\n//             setTimeout(() => {cardInfo = cards.val();}, 60000)\n            \n//             console.log(cards.val());\n//         } else {\n//             console.log(\"No data available\");\n//         }\n//     }).catch((error) => {\n//         console.error(error);\n//     });\n    \n//     const renderCard = (card, index) => {\n//         return (\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//         )\n//     }\n\n//     console.log(cardInfo);\n//     return (\n//         // <Container style={{ paddingTop: '2rem', paddingBottom: '2rem'}}>\n//         //     <Row>\n//         //         <Col>\n//         //             <MyCard title={cardInfo[0].title} />\n//         //         </Col>\n//         //     </Row>\n//         // </Container>\n//         <div>\n//             <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n//                 { cardInfo.map(card, index =>\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//                 )}\n        \n//             </div>\n//         </div>\n//     )\n// }\n\nexport default class DoctorsPage extends React.Component {\n\n    constructor() {\n        super()\n        let cardInfo;\n        this.state = {cardInfo: []}\n    }\n\n    componentDidUpdate() {\n        const dbRef = firebase.database().ref();\n\n        dbRef.child(\"cards\").get().then((cards) => {\n            if (cards.exists()) {\n                this.state.cardInfo = cards.val()\n                \n                console.log(cards.val());\n            } else {\n                console.log(\"No data available\");\n            }\n        }).catch((error) => {\n            console.error(error);\n        });\n\n        this.render()\n    }\n\n    render() {\n        return (\n            // <div>{this.cardInfo}</div>\n\n                <div className=\"grid\">\n                { this.state.cardInfo.map(card, index =>\n                <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index}/>\n                    )}\n            \n                </div>\n            \n        ) \n    }\n}"]},"metadata":{},"sourceType":"module"}