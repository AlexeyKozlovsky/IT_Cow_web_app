{"ast":null,"code":"var _jsxFileName = \"/home/alexeykozlovsky/WebstormProjects/it-cow-test-app/src/components/pages/ChooseDoctorPage.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MyCard2 from '../MyCard2';\nimport surg from '../../resources/surgeon.jpg';\nimport '../Mycard.css';\nimport '../../utils/App.css';\nimport firebase from './../../firebase';\nimport { StylesProvider } from '@material-ui/core';\nimport ScrollArea from 'react-scrollbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DoctorsPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cardInfo: []\n    };\n  }\n\n  componentDidMount() {\n    const dbRef = firebase.database().ref(); // dbRef.child(\"cards\").child(0).get().then((card) => {\n    //     console.log(card.val())\n    // })\n\n    dbRef.child(\"doctor_types\").get().then(doctors => {\n      this.setState({\n        cardInfo: doctors.val()\n      });\n      console.log(this.state.cardInfo);\n    }); // dbRef.child(\"cards\").get().then((cards) => {\n    //     if (cards.exists()) {\n    //         this.state.cardInfo = cards.val()\n    //         console.log(cards.val());\n    //     } else {\n    //         console.log(\"No data available\");\n    //     }\n    // }).catch((error) => {\n    //     console.error(error);\n    // });\n  }\n\n  componentDidUpdate() {\n    console.log(\"Updated\");\n  }\n\n  render() {\n    console.log(this.state.cardInfo);\n    return (\n      /*#__PURE__*/\n      // <div>{this.cardInfo}</div>\n      _jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          onLoad: () => console.log(\"LOADED\"),\n          children: this.state.cardInfo.map((card, index) => /*#__PURE__*/_jsxDEV(MyCard2, {\n            title: card.type,\n            img: card.image_id,\n            desc: card.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/alexeykozlovsky/WebstormProjects/it-cow-test-app/src/components/pages/ChooseDoctorPage.js"],"names":["React","Container","Row","Col","MyCard2","surg","firebase","StylesProvider","ScrollArea","DoctorsPage","Component","constructor","state","cardInfo","componentDidMount","dbRef","database","ref","child","get","then","doctors","setState","val","console","log","componentDidUpdate","render","map","card","index","type","image_id","desc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAO,eAAP;AACA,OAAO,qBAAP;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAOC,UAAP,MAAuB,iBAAvB;;AAGA,eAAe,MAAMC,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;AAErDC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,KAAK,GAAGT,QAAQ,CAACU,QAAT,GAAoBC,GAApB,EAAd,CADgB,CAIhB;AACA;AACA;;AAEAF,IAAAA,KAAK,CAACG,KAAN,CAAY,cAAZ,EAA4BC,GAA5B,GAAkCC,IAAlC,CAAwCC,OAAD,IAAa;AAChD,WAAKC,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAAEQ,OAAO,CAACE,GAAR;AAAX,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,QAAvB;AACH,KAHD,EARgB,CAahB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDa,EAAAA,kBAAkB,GAAG;AACjBF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,QAAvB;AACA;AAAA;AACI;AAEA;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,MAAM,EAAE,MAAMW,OAAO,CAACC,GAAR,CAAY,QAAZ,CAApC;AAAA,oBAEE,KAAKb,KAAL,CAAWC,QAAX,CAAoBe,GAApB,CAAyB,CAACC,IAAD,EAAOC,KAAP,kBACvB,QAAC,OAAD;AAAS,YAAA,KAAK,EAAED,IAAI,CAACE,IAArB;AAA2B,YAAA,GAAG,EAAEF,IAAI,CAACG,QAArC;AAA+C,YAAA,IAAI,EAAEH,IAAI,CAACI;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADF;AAFF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAcH;;AArDoD","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MyCard2 from '../MyCard2'\nimport surg from '../../resources/surgeon.jpg'\nimport '../Mycard.css'\nimport '../../utils/App.css'\n\nimport firebase from './../../firebase'\nimport { StylesProvider } from '@material-ui/core'\n\nimport ScrollArea from 'react-scrollbar'\n\n\nexport default class DoctorsPage extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {cardInfo: []}\n    }\n\n    componentDidMount() {\n        const dbRef = firebase.database().ref();\n\n\n        // dbRef.child(\"cards\").child(0).get().then((card) => {\n        //     console.log(card.val())\n        // })\n\n        dbRef.child(\"doctor_types\").get().then((doctors) => {\n            this.setState({cardInfo: doctors.val()});\n            console.log(this.state.cardInfo)\n        })\n        \n        // dbRef.child(\"cards\").get().then((cards) => {\n        //     if (cards.exists()) {\n        //         this.state.cardInfo = cards.val()\n                \n        //         console.log(cards.val());\n        //     } else {\n        //         console.log(\"No data available\");\n        //     }\n        // }).catch((error) => {\n        //     console.error(error);\n        // });\n    }\n\n    componentDidUpdate() {\n        console.log(\"Updated\");\n    }\n\n    render() {\n        console.log(this.state.cardInfo)\n        return (\n            // <div>{this.cardInfo}</div>\n\n            <div className=\"page\">\n                <div className=\"grid\" onLoad={() => console.log(\"LOADED\")}>\n\n                { this.state.cardInfo.map( (card, index) => \n                    <MyCard2 title={card.type} img={card.image_id} desc={card.desc}></MyCard2>)}\n\n                </div>\n            </div>\n            \n            \n        ) \n    }\n}"]},"metadata":{},"sourceType":"module"}