{"ast":null,"code":"var _jsxFileName = \"/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MyCard from '../Mycard';\nimport surg from '../../resources/surgeon.jpg';\nimport '../Mycard.css';\nimport card from '../Mycard.js';\nimport firebase from './../../firebase';\nimport { StylesProvider } from '@material-ui/core';\nimport ScrollArea from 'react-scrollbar'; // export default function DoctorsPage() {\n//     const dbRef = firebase.database().ref();\n//     let cardInfo = [];\n//     dbRef.child(\"cards\").get().then((cards) => {\n//         if (cards.exists()) {\n//             setTimeout(() => {cardInfo = cards.val();}, 60000)\n//             console.log(cards.val());\n//         } else {\n//             console.log(\"No data available\");\n//         }\n//     }).catch((error) => {\n//         console.error(error);\n//     });\n//     const renderCard = (card, index) => {\n//         return (\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//         )\n//     }\n//     console.log(cardInfo);\n//     return (\n//         // <Container style={{ paddingTop: '2rem', paddingBottom: '2rem'}}>\n//         //     <Row>\n//         //         <Col>\n//         //             <MyCard title={cardInfo[0].title} />\n//         //         </Col>\n//         //     </Row>\n//         // </Container>\n//         <div>\n//             <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n//                 { cardInfo.map(card, index =>\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//                 )}\n//             </div>\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DoctorsPage extends React.Component {\n  constructor() {\n    super();\n    let cardInfo;\n    this.state = {\n      cardInfo: []\n    };\n  }\n\n  componentDidUpdate() {\n    const dbRef = firebase.database().ref();\n    dbRef.child(\"cards\").get().then(cards => {\n      if (cards.exists()) {\n        this.state.cardInfo = cards.val();\n        console.log(cards.val());\n      } else {\n        console.log(\"No data available\");\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.render();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>{this.cardInfo}</div>\n      _jsxDEV(ScrollArea, {\n        speed: 2,\n        className: \"area\",\n        contentClassName: \"content\",\n        horizontal: false,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          style: {\n            margin: '2rem',\n            padding: '1rem',\n            alignItems: 'center'\n          },\n          children: this.state.cardInfo.map(card, index => /*#__PURE__*/_jsxDEV(MyCard, {\n            doctorTypeId: card.doctor_type_id,\n            desc: card.desc,\n            imageId: card.image_id,\n            className: \"box\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}","map":{"version":3,"sources":["/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js"],"names":["React","Container","Row","Col","MyCard","surg","card","firebase","StylesProvider","ScrollArea","DoctorsPage","Component","constructor","cardInfo","state","componentDidUpdate","dbRef","database","ref","child","get","then","cards","exists","val","console","log","catch","error","render","margin","padding","alignItems","map","index","doctor_type_id","desc","image_id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAOC,UAAP,MAAuB,iBAAvB,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAe,MAAMC,WAAN,SAA0BV,KAAK,CAACW,SAAhC,CAA0C;AAErDC,EAAAA,WAAW,GAAG;AACV;AACA,QAAIC,QAAJ;AACA,SAAKC,KAAL,GAAa;AAACD,MAAAA,QAAQ,EAAE;AAAX,KAAb;AACH;;AAEDE,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,KAAK,GAAGT,QAAQ,CAACU,QAAT,GAAoBC,GAApB,EAAd;AAEAF,IAAAA,KAAK,CAACG,KAAN,CAAY,OAAZ,EAAqBC,GAArB,GAA2BC,IAA3B,CAAiCC,KAAD,IAAW;AACvC,UAAIA,KAAK,CAACC,MAAN,EAAJ,EAAoB;AAChB,aAAKT,KAAL,CAAWD,QAAX,GAAsBS,KAAK,CAACE,GAAN,EAAtB;AAEAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACE,GAAN,EAAZ;AACH,OAJD,MAIO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,KARD,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,KAVD;AAYA,SAAKC,MAAL;AACH;;AAEDA,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AAEA,cAAC,UAAD;AAAY,QAAA,KAAK,EAAE,CAAnB;AACI,QAAA,SAAS,EAAC,MADd;AAEA,QAAA,gBAAgB,EAAC,SAFjB;AAGA,QAAA,UAAU,EAAE,KAHZ;AAAA,+BAII;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE,MAAT;AAAiBC,YAAAA,OAAO,EAAE,MAA1B;AAAkCC,YAAAA,UAAU,EAAE;AAA9C,WAA7B;AAAA,oBACE,KAAKlB,KAAL,CAAWD,QAAX,CAAoBoB,GAApB,CAAwB3B,IAAxB,EAA8B4B,KAAK,iBACrC,QAAC,MAAD;AAAQ,YAAA,YAAY,EAAE5B,IAAI,CAAC6B,cAA3B;AAA2C,YAAA,IAAI,EAAE7B,IAAI,CAAC8B,IAAtD;AAA4D,YAAA,OAAO,EAAE9B,IAAI,CAAC+B,QAA1E;AAAgG,YAAA,SAAS,EAAC;AAA1G,aAAyFH,KAAzF;AAAA;AAAA;AAAA;AAAA,kBADE;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAgBH;;AA3CoD","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MyCard from '../Mycard'\nimport surg from '../../resources/surgeon.jpg'\nimport '../Mycard.css'\nimport card from '../Mycard.js'\n\nimport firebase from './../../firebase'\nimport { StylesProvider } from '@material-ui/core'\n\nimport ScrollArea from 'react-scrollbar'\n\n// export default function DoctorsPage() {\n\n//     const dbRef = firebase.database().ref();\n//     let cardInfo = [];\n\n//     dbRef.child(\"cards\").get().then((cards) => {\n//         if (cards.exists()) {\n//             setTimeout(() => {cardInfo = cards.val();}, 60000)\n            \n//             console.log(cards.val());\n//         } else {\n//             console.log(\"No data available\");\n//         }\n//     }).catch((error) => {\n//         console.error(error);\n//     });\n    \n//     const renderCard = (card, index) => {\n//         return (\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//         )\n//     }\n\n//     console.log(cardInfo);\n//     return (\n//         // <Container style={{ paddingTop: '2rem', paddingBottom: '2rem'}}>\n//         //     <Row>\n//         //         <Col>\n//         //             <MyCard title={cardInfo[0].title} />\n//         //         </Col>\n//         //     </Row>\n//         // </Container>\n//         <div>\n//             <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n//                 { cardInfo.map(card, index =>\n//             <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n//                 )}\n        \n//             </div>\n//         </div>\n//     )\n// }\n\nexport default class DoctorsPage extends React.Component {\n\n    constructor() {\n        super()\n        let cardInfo;\n        this.state = {cardInfo: []}\n    }\n\n    componentDidUpdate() {\n        const dbRef = firebase.database().ref();\n\n        dbRef.child(\"cards\").get().then((cards) => {\n            if (cards.exists()) {\n                this.state.cardInfo = cards.val()\n                \n                console.log(cards.val());\n            } else {\n                console.log(\"No data available\");\n            }\n        }).catch((error) => {\n            console.error(error);\n        });\n\n        this.render()\n    }\n\n    render() {\n        return (\n            // <div>{this.cardInfo}</div>\n\n            <ScrollArea speed={2}\n                className=\"area\"\n            contentClassName=\"content\"\n            horizontal={false}>\n                <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n                { this.state.cardInfo.map(card, index =>\n                <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n                    )}\n            \n                </div>\n            </ScrollArea>\n            \n        ) \n    }\n}"]},"metadata":{},"sourceType":"module"}