{"ast":null,"code":"var _jsxFileName = \"/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport MyCard from '../Mycard';\nimport surg from '../../resources/surgeon.jpg';\nimport '../Mycard.css';\nimport card from '../Mycard.js';\nimport firebase from './../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DoctorsPage() {\n  const dbRef = firebase.database().ref();\n  let cardInfo = [];\n  dbRef.child(\"cards\").get().then(cards => {\n    if (cards.exists()) {\n      setTimeout(() => {\n        cardInfo = cards.val();\n      }, 2000);\n      console.log(cards.val());\n    } else {\n      console.log(\"No data available\");\n    }\n  }).catch(error => {\n    console.error(error);\n  });\n\n  const renderCard = (card, index) => {\n    return /*#__PURE__*/_jsxDEV(MyCard, {\n      doctorTypeId: card.doctor_type_id,\n      desc: card.desc,\n      imageId: card.image_id,\n      className: \"box\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  };\n\n  console.log(cardInfo);\n  return (\n    /*#__PURE__*/\n    // <Container style={{ paddingTop: '2rem', paddingBottom: '2rem'}}>\n    //     <Row>\n    //         <Col>\n    //             <MyCard title={cardInfo[0].title} />\n    //         </Col>\n    //     </Row>\n    // </Container>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid\",\n        style: {\n          margin: '2rem',\n          padding: '1rem',\n          alignItems: 'center'\n        },\n        children: cardInfo.map(card, index => /*#__PURE__*/_jsxDEV(MyCard, {\n          doctorTypeId: card.doctor_type_id,\n          desc: card.desc,\n          imageId: card.image_id,\n          className: \"box\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = DoctorsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorsPage\");","map":{"version":3,"sources":["/home/alexeykozlovsky/Documents/Hackaton/ROSTELEKOM/frontend/IT_Cow-front_end/src/components/pages/ChooseDoctorPage.js"],"names":["React","Container","Row","Col","MyCard","surg","card","firebase","DoctorsPage","dbRef","database","ref","cardInfo","child","get","then","cards","exists","setTimeout","val","console","log","catch","error","renderCard","index","doctor_type_id","desc","image_id","margin","padding","alignItems","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAElC,QAAMC,KAAK,GAAGF,QAAQ,CAACG,QAAT,GAAoBC,GAApB,EAAd;AACA,MAAIC,QAAQ,GAAG,EAAf;AAEAH,EAAAA,KAAK,CAACI,KAAN,CAAY,OAAZ,EAAqBC,GAArB,GAA2BC,IAA3B,CAAiCC,KAAD,IAAW;AACvC,QAAIA,KAAK,CAACC,MAAN,EAAJ,EAAoB;AAChBC,MAAAA,UAAU,CAAC,MAAM;AAACN,QAAAA,QAAQ,GAAGI,KAAK,CAACG,GAAN,EAAX;AAAwB,OAAhC,EAAkC,IAAlC,CAAV;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,GAAN,EAAZ;AACH,KAJD,MAIO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;AACJ,GARD,EAQGC,KARH,CAQUC,KAAD,IAAW;AAChBH,IAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,GAVD;;AAYA,QAAMC,UAAU,GAAG,CAAClB,IAAD,EAAOmB,KAAP,KAAiB;AAChC,wBACI,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEnB,IAAI,CAACoB,cAA3B;AAA2C,MAAA,IAAI,EAAEpB,IAAI,CAACqB,IAAtD;AAA4D,MAAA,OAAO,EAAErB,IAAI,CAACsB,QAA1E;AAAgG,MAAA,SAAS,EAAC;AAA1G,OAAyFH,KAAzF;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD;;AAMAL,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE;AAACiB,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,OAAO,EAAE,MAA1B;AAAkCC,UAAAA,UAAU,EAAE;AAA9C,SAA7B;AAAA,kBACMnB,QAAQ,CAACoB,GAAT,CAAa1B,IAAb,EAAmBmB,KAAK,iBAC9B,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAEnB,IAAI,CAACoB,cAA3B;AAA2C,UAAA,IAAI,EAAEpB,IAAI,CAACqB,IAAtD;AAA4D,UAAA,OAAO,EAAErB,IAAI,CAACsB,QAA1E;AAAgG,UAAA,SAAS,EAAC;AAA1G,WAAyFH,KAAzF;AAAA;AAAA;AAAA;AAAA,gBADM;AADN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AARJ;AAiBH;KAzCuBjB,W","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport MyCard from '../Mycard'\nimport surg from '../../resources/surgeon.jpg'\nimport '../Mycard.css'\nimport card from '../Mycard.js'\n\nimport firebase from './../../firebase'\n\nexport default function DoctorsPage() {\n\n    const dbRef = firebase.database().ref();\n    let cardInfo = [];\n\n    dbRef.child(\"cards\").get().then((cards) => {\n        if (cards.exists()) {\n            setTimeout(() => {cardInfo = cards.val();}, 2000)\n            \n            console.log(cards.val());\n        } else {\n            console.log(\"No data available\");\n        }\n    }).catch((error) => {\n        console.error(error);\n    });\n    \n    const renderCard = (card, index) => {\n        return (\n            <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n        )\n    }\n\n    console.log(cardInfo);\n    return (\n        // <Container style={{ paddingTop: '2rem', paddingBottom: '2rem'}}>\n        //     <Row>\n        //         <Col>\n        //             <MyCard title={cardInfo[0].title} />\n        //         </Col>\n        //     </Row>\n        // </Container>\n        <div>\n            <div className=\"grid\" style={{margin: '2rem', padding: '1rem', alignItems: 'center'}}>\n                { cardInfo.map(card, index =>\n            <MyCard doctorTypeId={card.doctor_type_id} desc={card.desc} imageId={card.image_id} key={index} className=\"box\"/>\n                )}\n        \n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}